/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.exportSymbol('proto.xguardlabs.uav.protobuf.Mission', null, global);
goog.exportSymbol('proto.xguardlabs.uav.protobuf.Mission.MissionState', null, global);
goog.exportSymbol('proto.xguardlabs.uav.protobuf.UnknownObject', null, global);
goog.exportSymbol('proto.xguardlabs.uav.protobuf.Waypoint', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xguardlabs.uav.protobuf.Waypoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xguardlabs.uav.protobuf.Waypoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.xguardlabs.uav.protobuf.Waypoint.displayName = 'proto.xguardlabs.uav.protobuf.Waypoint';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xguardlabs.uav.protobuf.Waypoint.prototype.toObject = function(opt_includeInstance) {
  return proto.xguardlabs.uav.protobuf.Waypoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xguardlabs.uav.protobuf.Waypoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xguardlabs.uav.protobuf.Waypoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    latitude: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    longitude: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    altitude: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    yaw: +jspb.Message.getFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xguardlabs.uav.protobuf.Waypoint}
 */
proto.xguardlabs.uav.protobuf.Waypoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xguardlabs.uav.protobuf.Waypoint;
  return proto.xguardlabs.uav.protobuf.Waypoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xguardlabs.uav.protobuf.Waypoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xguardlabs.uav.protobuf.Waypoint}
 */
proto.xguardlabs.uav.protobuf.Waypoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAltitude(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setYaw(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xguardlabs.uav.protobuf.Waypoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xguardlabs.uav.protobuf.Waypoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xguardlabs.uav.protobuf.Waypoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xguardlabs.uav.protobuf.Waypoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getAltitude();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getYaw();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double latitude = 1;
 * @return {number}
 */
proto.xguardlabs.uav.protobuf.Waypoint.prototype.getLatitude = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.xguardlabs.uav.protobuf.Waypoint.prototype.setLatitude = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double longitude = 2;
 * @return {number}
 */
proto.xguardlabs.uav.protobuf.Waypoint.prototype.getLongitude = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.xguardlabs.uav.protobuf.Waypoint.prototype.setLongitude = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double altitude = 3;
 * @return {number}
 */
proto.xguardlabs.uav.protobuf.Waypoint.prototype.getAltitude = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.xguardlabs.uav.protobuf.Waypoint.prototype.setAltitude = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double yaw = 4;
 * @return {number}
 */
proto.xguardlabs.uav.protobuf.Waypoint.prototype.getYaw = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.xguardlabs.uav.protobuf.Waypoint.prototype.setYaw = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xguardlabs.uav.protobuf.Mission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xguardlabs.uav.protobuf.Mission.repeatedFields_, null);
};
goog.inherits(proto.xguardlabs.uav.protobuf.Mission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.xguardlabs.uav.protobuf.Mission.displayName = 'proto.xguardlabs.uav.protobuf.Mission';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xguardlabs.uav.protobuf.Mission.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xguardlabs.uav.protobuf.Mission.prototype.toObject = function(opt_includeInstance) {
  return proto.xguardlabs.uav.protobuf.Mission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xguardlabs.uav.protobuf.Mission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xguardlabs.uav.protobuf.Mission.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    waypointsList: jspb.Message.toObjectList(msg.getWaypointsList(),
    proto.xguardlabs.uav.protobuf.Waypoint.toObject, includeInstance),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xguardlabs.uav.protobuf.Mission}
 */
proto.xguardlabs.uav.protobuf.Mission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xguardlabs.uav.protobuf.Mission;
  return proto.xguardlabs.uav.protobuf.Mission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xguardlabs.uav.protobuf.Mission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xguardlabs.uav.protobuf.Mission}
 */
proto.xguardlabs.uav.protobuf.Mission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.xguardlabs.uav.protobuf.Waypoint;
      reader.readMessage(value,proto.xguardlabs.uav.protobuf.Waypoint.deserializeBinaryFromReader);
      msg.addWaypoints(value);
      break;
    case 3:
      var value = /** @type {!proto.xguardlabs.uav.protobuf.Mission.MissionState} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xguardlabs.uav.protobuf.Mission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xguardlabs.uav.protobuf.Mission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xguardlabs.uav.protobuf.Mission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xguardlabs.uav.protobuf.Mission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getWaypointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.xguardlabs.uav.protobuf.Waypoint.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.xguardlabs.uav.protobuf.Mission.MissionState = {
  UNINITIALISED: 0,
  UNCONFIRMED: 1,
  CONFIRMED: 2,
  ACTIVE: 3,
  CANCELED: 4,
  INACTIVE: 5,
  COMPLETED: 6,
  ERROR: 7
};

/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.xguardlabs.uav.protobuf.Mission.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.xguardlabs.uav.protobuf.Mission.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Waypoint waypoints = 2;
 * @return {!Array<!proto.xguardlabs.uav.protobuf.Waypoint>}
 */
proto.xguardlabs.uav.protobuf.Mission.prototype.getWaypointsList = function() {
  return /** @type{!Array<!proto.xguardlabs.uav.protobuf.Waypoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xguardlabs.uav.protobuf.Waypoint, 2));
};


/** @param {!Array<!proto.xguardlabs.uav.protobuf.Waypoint>} value */
proto.xguardlabs.uav.protobuf.Mission.prototype.setWaypointsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.xguardlabs.uav.protobuf.Waypoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xguardlabs.uav.protobuf.Waypoint}
 */
proto.xguardlabs.uav.protobuf.Mission.prototype.addWaypoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.xguardlabs.uav.protobuf.Waypoint, opt_index);
};


proto.xguardlabs.uav.protobuf.Mission.prototype.clearWaypointsList = function() {
  this.setWaypointsList([]);
};


/**
 * optional MissionState status = 3;
 * @return {!proto.xguardlabs.uav.protobuf.Mission.MissionState}
 */
proto.xguardlabs.uav.protobuf.Mission.prototype.getStatus = function() {
  return /** @type {!proto.xguardlabs.uav.protobuf.Mission.MissionState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.xguardlabs.uav.protobuf.Mission.MissionState} value */
proto.xguardlabs.uav.protobuf.Mission.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xguardlabs.uav.protobuf.UnknownObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xguardlabs.uav.protobuf.UnknownObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.xguardlabs.uav.protobuf.UnknownObject.displayName = 'proto.xguardlabs.uav.protobuf.UnknownObject';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xguardlabs.uav.protobuf.UnknownObject.prototype.toObject = function(opt_includeInstance) {
  return proto.xguardlabs.uav.protobuf.UnknownObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xguardlabs.uav.protobuf.UnknownObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xguardlabs.uav.protobuf.UnknownObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    image: jspb.Message.getFieldWithDefault(msg, 2, ""),
    waypoint: (f = msg.getWaypoint()) && proto.xguardlabs.uav.protobuf.Waypoint.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xguardlabs.uav.protobuf.UnknownObject}
 */
proto.xguardlabs.uav.protobuf.UnknownObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xguardlabs.uav.protobuf.UnknownObject;
  return proto.xguardlabs.uav.protobuf.UnknownObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xguardlabs.uav.protobuf.UnknownObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xguardlabs.uav.protobuf.UnknownObject}
 */
proto.xguardlabs.uav.protobuf.UnknownObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 3:
      var value = new proto.xguardlabs.uav.protobuf.Waypoint;
      reader.readMessage(value,proto.xguardlabs.uav.protobuf.Waypoint.deserializeBinaryFromReader);
      msg.setWaypoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xguardlabs.uav.protobuf.UnknownObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xguardlabs.uav.protobuf.UnknownObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xguardlabs.uav.protobuf.UnknownObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xguardlabs.uav.protobuf.UnknownObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getWaypoint();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.xguardlabs.uav.protobuf.Waypoint.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp timestamp = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xguardlabs.uav.protobuf.UnknownObject.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xguardlabs.uav.protobuf.UnknownObject.prototype.setTimestamp = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.xguardlabs.uav.protobuf.UnknownObject.prototype.clearTimestamp = function() {
  this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.xguardlabs.uav.protobuf.UnknownObject.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string image = 2;
 * @return {string}
 */
proto.xguardlabs.uav.protobuf.UnknownObject.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xguardlabs.uav.protobuf.UnknownObject.prototype.setImage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Waypoint waypoint = 3;
 * @return {?proto.xguardlabs.uav.protobuf.Waypoint}
 */
proto.xguardlabs.uav.protobuf.UnknownObject.prototype.getWaypoint = function() {
  return /** @type{?proto.xguardlabs.uav.protobuf.Waypoint} */ (
    jspb.Message.getWrapperField(this, proto.xguardlabs.uav.protobuf.Waypoint, 3));
};


/** @param {?proto.xguardlabs.uav.protobuf.Waypoint|undefined} value */
proto.xguardlabs.uav.protobuf.UnknownObject.prototype.setWaypoint = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.xguardlabs.uav.protobuf.UnknownObject.prototype.clearWaypoint = function() {
  this.setWaypoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.xguardlabs.uav.protobuf.UnknownObject.prototype.hasWaypoint = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.xguardlabs.uav.protobuf);
